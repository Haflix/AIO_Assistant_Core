MQTT

Notes:
- add tls to config
- add on_{all the mqtt events}
- PROCESS REQUEST OUTDATED
- handle errors on execute may be

Add:
- takes only one from list
- serialize 
- multi? like processing with all of the instances of a plugin
- acknowledge
- FUNCTION TO SELECT THE PLUGIN + HOST WITH PARAMS
 -> version usw in description dingens? 
 -> Works as the mentioned roles thing
 -> Can be given as parameters 
 -> plugins have a callback to determine if the plugin is viable (self.checkCompatibility) or something like that
 -> maybe no dict as it makes codestructure worse but dict on init can be turned into the vars
- EXCEPTIONCLASS FOR FAILED REQUESTS


Updates needed:
- PluginCollection.reload_plugins
- All execute methods and its steps (They still use the old patterns)
- Functionality so that plugin-instances can be targeted with their uid else just use the name to find a plugin with the other steps


Errorhandling:
- same hostnames
- wait for bigger requests to upload (because if nobody responds in time, the request could get timed out) (! Send the request via MQTT without the big contents and send the contents on other ways)




Things that should be added:
- Acknowledge packets when receiving a request for example
- Only one instance should process a request when using remote or any. Before making it a remote request with execute_remote, the PluginCollection should check the host_registry and check its own plugins
- Dont send packets to a host which wasnt seen in over 70s
- Use another function than publish, that first calls serialization or deserialization when receiving based on the scenario. 


MQTT:
- Pluginspecific stuff share
- identname and maybe uuid for hosts
- Needs to write the plugin hosts etc WITH LOCK


Questions:
- How to save login data securely?
- Role for plugins? (for example: if it can receive or not)
- Maybe add an "init after config" parameter that triggers functions which need all plugins to be loaded first




